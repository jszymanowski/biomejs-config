{
	"$schema": "https://biomejs.dev/schemas/2.0.0-beta.1/schema.json",

	// Use .gitignore files
	"vcs": {
		"enabled": true,
		"clientKind": "git",
		"useIgnoreFile": true
	},

	// Exclude autogenerated files from commonly used packages
	"files": {
		"includes": [
			"!**/src/routeTree.gen.ts", // Tanstack Router
			"!**/public/mockServiceWorker.js" // MockServiceWorker
		]
	},

	// Formatting rules
	"formatter": {
		"enabled": true,
		"indentStyle": "space",
		"indentWidth": 2,
		"lineWidth": 100
	},

	// Organizers
	"assist": {
		"actions": {
			"source": {
				"organizeImports": "on",
				"useSortedKeys": "off", // TODO: enable in 1.0
				"useSortedAttributes": "off" // TODO: enable in 1.0
			}
		}
	},

	// Linter rules - previously biome 1.0's recommended:true options, expanded in 2.0
	"linter": {
		"enabled": true,
		"rules": {
			"style": {
				"noNonNullAssertion": "off",
				"noUnusedTemplateLiteral": "off",
				"noUselessElse": "off",
				"useTemplate": "off",
				"useLiteralEnumMembers": "error",
				"noCommaOperator": "error",
				"useNodejsImportProtocol": "error",
				"useAsConstAssertion": "error",
				"useNumericLiterals": "error",
				"useEnumInitializers": "error",
				"useSelfClosingElements": "error",
				"useConst": "error",
				"useSingleVarDeclarator": "error",
				"useNumberNamespace": "error",
				"noInferrableTypes": "error",
				"useExponentiationOperator": "error",
				"noParameterAssign": "error",
				"useDefaultParameterLast": "error",
				"noArguments": "error",
				"useImportType": "error",
				"useExportType": "error",
				"useShorthandFunctionType": "error"
			},
			"a11y": {
				"noSvgWithoutTitle": "off",
				"useAltText": "off",
				"useButtonType": "off",
				"useKeyWithClickEvents": "off",
				"useSemanticElements": "off"
			},
			"correctness": {
				"noChildrenProp": "off",
				"useExhaustiveDependencies": "off"
			},
			"nursery": {
				"useSortedClasses": {
					"level": "error",
					"fix": "safe",
					"options": {
						"attributes": ["className"],
						"functions": ["cn"]
					}
				}
			},
			"complexity": {
				"noForEach": "off",
				"noUselessFragments": "off"
			},
			"suspicious": {
				"noArrayIndexKey": "off"
			}
		}
	},

	// Enable CSS
	"css": {
		"formatter": {
			"enabled": true
		},
		"linter": {
			"enabled": true
		}
	},

	// JavaScript-specific rules
	"javascript": {
		"formatter": {
			"quoteStyle": "double"
		}
	},

	// JSON overrides
	"overrides": [
		{
			"includes": ["**/*.json"],
			"formatter": {
				"indentStyle": "space",
				"indentWidth": 2
			}
		}
	]
}
